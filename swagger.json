{
    "openapi": "3.0.0",
    "info": {
        "title": "RentX API",
        "description": "Fictitious car rent API",
        "termsOfService": "https://github.com/brenorosado",
        "contact": {
            "name": "Breno Rosado",
            "email": "brenorosado.cjr@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "RentX API"
        }
    ],
    "paths": {
        "/account": {
            "post": {
                "summary": "Create account",
                "tags": ["Accounts"],
                "description": "Create account",
                "requestBody": {
                    "description": "Required data for account creation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAccountCreation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success. Account created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref":"#/components/schemas/ResponseAccountCreation" 
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Some fields may be missing or invalid."
                    },
                    "409": {
                        "description": "Conflict. The e-mail is already being used."
                    }
                }
            },
            "get": {
                "summary": "Get logged user account by the bearer token",
                "description": "This route return the logged user account information",
                "tags": ["Accounts"],
                "responses": {
                    "200": {
                        "description": "Success. Account finded.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAccountCreation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found."
                    },
                    "403": {
                        "description": "Unauthorized."
                    }
                }
            }
        },
        "/authenticate": {
            "post": {
                "summary": "Authentication",
                "tags": ["Auth"],
                "description": "Login",
                "requestBody": {
                    "description": "Required data for login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAuthentication"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success. Authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref":"#/components/schemas/ResponseAuthentication" 
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Some fields may be missing or invalid."
                    },
                    "401": {
                        "description": "Unauthorized. Incorrect e-mail or password."
                    }
                }
            }
        },
        "/car": {
            "post": {
                "summary": "Create car",
                "tags": ["Cars"],
                "description": "Create car",
                "requestBody": {
                    "description": "Required data for car creation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCarCreation"
                            }
                        }
                    }
                }
            }
        },
        "/image": {
            "post": {
                "summary": "Create image file in the server.",
                "tags": ["Images"],
                "requestBody": {
                    "description": "Required data for image file creation.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestImageCreation"
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RequestAccountCreation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User e-mail"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password"
                    },
                    "cnh": {
                        "type": "string",
                        "description": "User driver's license"
                    },
                    "role": {
                        "description": "User role",
                        "enum": ["USER", "ADMIN"]
                    }
                },
                "required": ["name", "email", "password", "cnh", "role"]
            },
            "ResponseAccountCreation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User account identification",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User e-mail"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password"
                    },
                    "cnh": {
                        "type": "string",
                        "description": "User driver's license"
                    },
                    "role": {
                        "description": "User role",
                        "enum": ["USER", "ADMIN"]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "User account creation time stamp"
                    }
                }
            },
            "RequestAuthentication": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password"
                    }
                },
                "required": ["email", "password"]
            },
            "ResponseAuthentication": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT Token used for authorization."
                    }
                }
            },
            "RequestImageCreation": {
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string",
                        "description": "Name of the file that must be created."
                    },
                    "fileExtension": {
                        "type": "string",
                        "description": "Extension of the file that must be created."
                    },
                    "base64": {
                        "type": "string",
                        "description": "The file converted to a base64 string."
                    }
                }
            },
            "ResponseImageCreation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Image identifier in database."
                    },
                    "fileKey": {
                        "type": "string",
                        "description": "Image identifier in uploads server folder."
                    },
                    "fileName": {
                        "type": "string",
                        "description": "Name of the file that must be created."
                    },
                    "fileExtension": {
                        "type": "string",
                        "description": "Extension of the file that must be created."
                    },
                    "base64": {
                        "type": "string",
                        "description": "The file converted to a base64 string."
                    }
                }
            },
            "RequestCarCreation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Car name"
                    },
                    "manufacturer": {
                        "type": "string",
                        "description": "Car manufacturer"
                    },
                    "pricePerDay": {
                        "type": "number",
                        "format": "float",
                        "description": "Cost to ren the car per a day"
                    },
                    "maxSpeed": {
                        "type": "integer",
                        "format": "integer32",
                        "description": "Car maximun kilometers/hour speed"
                    },
                    "zeroToAHundredTime": {
                        "type": "number",
                        "format": "float",
                        "description": "Time til the car reaches 100 kilometers/hour speed"
                    },
                    "fuelType": {
                        "type": "string",
                        "description": "Car fuel type"
                    },
                    "gear": {
                        "type": "string",
                        "description": "Car gear type"
                    },
                    "maxPeople": {
                        "type": "integer",
                        "format": "integer32",
                        "description": "Maximun number of people in the car"
                    },
                    "horsePower": {
                        "type": "integer",
                        "format": "integer32",
                        "description": "Car power measured by HP"
                    },
                    "description": {
                        "type": "string",
                        "description": "Car's description"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Car images"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [{
        "bearerAuth": []
    }]
}