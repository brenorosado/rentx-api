generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRoles {
  USER
  ADMIN
}

enum FuelType {
  GAS
  ELECTRIC
  HYBRID
}

enum GearType {
  MANUAL
  AUTOMATIC
}

model User {
  id                      String @id @default(uuid())
  name                    String
  email                   String @unique
  cnh                     String? @unique
  password                String
  role                    UserRoles @default(USER)

  createdAt               DateTime @default(now())
  createdBy               String?
  updatedAt               DateTime? @updatedAt()
  updatedBy               String?

  bookings                Booking[] @relation("booking_user")

  @@map("users")
}

model Car {
  id                      String @id @default(uuid())
  make                    String
  model                   String
  pricePerDay             Int
  maxKmPerHour            Int
  timeToAHundredKmPerHour Float
  fuelType                FuelType
  gearType                GearType
  maxPeopleCapacity       Int
  horsepower              Int
  description             String

  createdAt               DateTime @default(now())
  createdBy               String?
  updatedAt               DateTime? @updatedAt()
  updatedBy               String?

  bookings                Booking[] @relation("booking_car")

  @@map("cars")
}

model Booking {
  id                      String @id @default(uuid())
  startAt                 DateTime
  endAt                   DateTime
  totalPrice              Int

  createdAt               DateTime @default(now())
  createdBy               String?
  updatedAt               DateTime? @updatedAt()
  updatedBy               String?

  userId                  String
  user                    User @relation("booking_user", fields: [userId], references: [id])
  carId                   String
  car                     Car @relation("booking_car", fields: [carId], references: [id])

  @@map("bookings")
}